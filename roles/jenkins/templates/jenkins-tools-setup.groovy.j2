def instance = jenkins.model.Jenkins.instance

JAVA: {
  def javaInstallations = []

  {% for item in jenkins_tools_config %}
    {% if item.type == 'java' %}
      println("Adding {{ item.type }} instance {{ item.name }} from the url {{ item.home }}")
      javaInstallations.add(new hudson.model.JDK("{{ item.name}}", "{{ item.home }}", null));
    {% endif %}
  {% endfor %}

  def jdkDescriptor = new hudson.model.JDK.DescriptorImpl()
  jdkDescriptor.setInstallations(javaInstallations.toArray(new hudson.model.JDK[0]));
}

MAVEN: {
  def mavenInstallations = []

  {% for item in jenkins_tools_config %}
    {% if item.type == 'maven' %}
      println("Adding {{ item.type }} instance {{ item.name }} from the url {{ item.url }}")
      def installer = new hudson.tools.ZipExtractionInstaller("", "{{ item.url }}", "")
      def installerSourceProperty = new hudson.tools.InstallSourceProperty([installer])
      mavenInstallations.add(new hudson.tasks.Maven.MavenInstallation("{{ item.name }}", "", [installerSourceProperty]))
    {% endif %}
  {% endfor %}

  def mavenDescriptor = instance.getExtensionList(hudson.tasks.Maven.DescriptorImpl.class)[0]
  mavenDescriptor.setInstallations(mavenInstallations.toArray(new hudson.tasks.Maven.MavenInstallation[0]))
  mavenDescriptor.save()
}

SONAR: {
  // See: https://github.com/SonarSource/sonar-scanner-jenkins
  def sonarInstallations = []

  {% for item in jenkins_tools_config %}
    {% if item.type == 'sonar' %}
      println("Adding {{ item.type }} instance {{ item.name }} to the url {{ item.url }}")
      sonarInstallations.add(new hudson.plugins.sonar.SonarInstallation(
              "{{ item.name }}",          // name
              "{{ item.url }}",           // serverUrl
              "{{ item.version }}",       // serverVersion
              "",                         // serverAuthenticationToken
              "",                         // databaseUrl
              "",                         // databaseLogin
              "",                         // databasePassword
              "",                         // mojoVersion
              "",                         // additionalProperties
              null,                       // triggers
              "",                         // sonarLogin
              "",                         // sonarPassword
              ""))                        // additionalAnalysisProperties
    {% endif %}
  {% endfor %}

  def sonarGlobalConfiguration = instance.getDescriptor(hudson.plugins.sonar.SonarGlobalConfiguration.class)
  sonarGlobalConfiguration.setInstallations(sonarInstallations.toArray(new hudson.plugins.sonar.SonarInstallation[0]))
  sonarGlobalConfiguration.save()
}

//GRADLE: {
//  def gradleInstallations = []
//
//  {% for item in jenkins_tools_config %}
//    {% if item.type == 'gradle' %}
//      println("Adding {{ item.type }} instance {{ item.name }} from the url {{ item.url }}")
//      def installer = new hudson.tools.ZipExtractionInstaller("", "{{ item.url }}", "")
//      def installerSourceProperty = new hudson.tools.InstallSourceProperty([installer])
//      gradleInstallations.add(new hudson.plugins.gradle.GradleInstallation("{{ item.name }}", "", [installerSourceProperty]));
//    {% endif %}
//  {% endfor %}
//
//  def gradleDescriptor = instance.getExtensionList(hudson.plugins.gradle.GradleInstallation.DescriptorImpl.class)
//  gradleDescriptor.setInstallations(gradleInstallations.toArray(new hudson.plugins.gradle.GradleInstallation[0]))
//  gradleDescriptor.save()
//}

//NODEJS: {
//  def nodejsInstallations = []
//
//  {% for item in jenkins_tools_config %}
//    {% if item.type == 'nodejs' %}
//      println("Adding {{ item.type }} instance {{ item.name }} from the url {{ item.url }}")
//      def installer = new hudson.tools.ZipExtractionInstaller("", "{{ item.url }}", "")
//      def installerSourceProperty = new hudson.tools.InstallSourceProperty([installer])
//      nodejsInstallations.add(new hudson.plugins.nodejs.tools.NodeJSInstaller("{{ item.name }}", "", [installerSourceProperty]));
//    {% endif %}
//  {% endfor %}
//
//  def nodejsDescriptor = instance.getExtensionList(hudson.plugins.gradle.GradleInstallation.DescriptorImpl.class)
//  nodejsDescriptor.setInstallations(gradleInstallations.toArray(new hudson.plugins.gradle.GradleInstallation[0]))
//  nodejsDescriptor.save()
//}
